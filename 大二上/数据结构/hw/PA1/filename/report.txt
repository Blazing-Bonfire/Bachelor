陈英发 Donny Chan
19:16 2019-10-07
------------------
解题报告
CST2019 filename

这个直接就是找Levelshtein距离，但是要注意的是，字符串的长度会使一般的空间复杂度O(n*m)超出允许范围，所以要改成一维数组的实现方式。因为在二维数组中，对于每一行的元素都仅取决于上一行的元素，所以每一循环一行，只需要保留一行的元素即可。具体实现方式跟二维数组区别不大，而对于二维数组的实现方式，网上多得是，是个经典算法，参考资料就是其中一个实现方式。
    但是。。。TLE，我就发觉有一个条件：k。查了一查，根据[2]这是可以将复杂度减到O(nk)，想了想，其实根据这个dp的递推公式，根本不需要计算dp[n][m]中的每个元素，对于第i行仅需循环j从max(i - k, 0)到min(m, i + k)的元素即可，其他元素不可能影响最终答案，因为如果答案取决于它们，答案肯定大于k。

------------------
参考资料：
[1] https://www.jianshu.com/p/a617d20162cf
[2] https://stackoverflow.com/questions/3183149/most-efficient-way-to-calculate-levenshtein-distance